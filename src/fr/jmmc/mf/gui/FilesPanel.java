/*
 * FilesPanel.java
 *
 * Created on 6 d√©cembre 2006, 11:33
 */
package fr.jmmc.mf.gui;

import fr.jmmc.mf.gui.models.SettingsModel;
import fr.jmmc.mcs.gui.FeedbackReport;

import fr.jmmc.mf.models.Files;

import javax.swing.*;


/**
 *
 * @author  mella
 */
public class FilesPanel extends javax.swing.JPanel
{
    /**
     * DOCUMENT ME!
     */
    static java.util.logging.Logger logger = java.util.logging.Logger.getLogger(
            "fr.jmmc.mf.gui.FilesPanel");

    /**
     * DOCUMENT ME!
     */
    static Files current = null;

    /**
     * DOCUMENT ME!
     */
    SettingsViewerInterface settingsViewer = null;

    /**
     * DOCUMENT ME!
     */
    public static Action loadFilesAction;

    /**
     * DOCUMENT ME!
     */
    SettingsModel settingsModel = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
     * DOCUMENT ME!
     */
    private javax.swing.JButton     addFileButton;

    /**
     * DOCUMENT ME!
     */
    private javax.swing.JList fileList;

    /**
     * DOCUMENT ME!
     */
    private javax.swing.JScrollPane jScrollPane1;

    // End of variables declaration//GEN-END:variables

    /** Creates new form FilesPanel */
    public FilesPanel(SettingsViewerInterface viewer)
    {
        settingsViewer      = viewer;
        loadFilesAction     = new LoadFilesAction();
        initComponents();
    }

    /**
     * DOCUMENT ME!
     *
     * @param f DOCUMENT ME!
     * @param s DOCUMENT ME!
     */
    public void show(Files f, SettingsModel s)
    {
        current           = f;
        settingsModel     = s;
        logger.fine("Showing list of " + current.getFileCount() + " files");

        // update model because it could have been modified
        fileList.setModel(s.allFilesListModel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1      = new javax.swing.JScrollPane();
        fileList          = new javax.swing.JList();
        addFileButton     = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setBorder(javax.swing.BorderFactory.createTitledBorder("Oifile list"));
        fileList.setModel(settingsViewer.getSettingsModel().allFilesListModel);
        fileList.addMouseListener(new java.awt.event.MouseAdapter()
            {
                public void mouseClicked(java.awt.event.MouseEvent evt)
                {
                    fileListMouseClicked(evt);
                }
            });

        jScrollPane1.setViewportView(fileList);

        gridBagConstraints             = new java.awt.GridBagConstraints();
        gridBagConstraints.fill        = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx     = 1.0;
        gridBagConstraints.weighty     = 1.0;
        add(jScrollPane1, gridBagConstraints);

        addFileButton.setAction(loadFilesAction);
        gridBagConstraints            = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx      = 0;
        gridBagConstraints.gridy      = 1;
        gridBagConstraints.anchor     = java.awt.GridBagConstraints.WEST;
        add(addFileButton, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    /**
     * DOCUMENT ME!
     *
     * @param evt DOCUMENT ME!
     */
    private void fileListMouseClicked(java.awt.event.MouseEvent evt)
    {
        if (evt.getClickCount() == 2)
        {
            if (fileList.getSelectedValue() == null)
            {
                loadFilesAction.actionPerformed(null);
            }
            else
            {
                settingsViewer.showSettingElement(fileList.getSelectedValue());
            }
        }
    } // </editor-fold>                              

    //
    // Inner classes used to manage actions
    //
    protected class LoadFilesAction extends fr.jmmc.mcs.util.MCSAction
    {
        public String lastDir = System.getProperty("user.home");

        public LoadFilesAction()
        {
            super("loadFiles");
        }

        public void actionPerformed(java.awt.event.ActionEvent e)
        {
            logger.entering("" + this.getClass(), "actionPerformed");

            try
            {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setMultiSelectionEnabled(true);

                // Set in previous load directory
                if (lastDir != null)
                {
                    fileChooser.setCurrentDirectory(new java.io.File(lastDir));
                }

                // Open file chooser
                int returnVal = fileChooser.showOpenDialog(null);

                if (returnVal == JFileChooser.APPROVE_OPTION)
                {
                    java.io.File[] files = fileChooser.getSelectedFiles();

                    for (int i = 0; i < files.length; i++)
                    {
                        settingsModel.addFile(files[i]);
                    }

                    lastDir = files[0].getParent();
                    settingsViewer.showSettingElement(settingsModel.getRootSettings());
                }
            }
            catch (Exception exc)
            {
                new FeedbackReport(null, true, exc);
            }
        }
    }
}
