/*
 * PreferencesView.java
 *
 * Created on 26 f√©vrier 2008, 09:45
 */
package fr.jmmc.mf.gui;

import fr.jmmc.mcs.util.ActionRegistrar;
import java.awt.Color;

import java.io.File;

import java.util.Observable;
import java.util.Observer;

import javax.swing.Action;
import javax.swing.ToolTipManager;


/**
 *
 * @author  mella
 */
public class PreferencesView extends javax.swing.JFrame implements Observer
{
    /**
     * DOCUMENT ME!
     */
    static Preferences myPreferences = Preferences.getInstance();

    /**
     * DOCUMENT ME!
     */
    static ToolTipManager toolTipManager = ToolTipManager.sharedInstance();

    /**
     * DOCUMENT ME!
     */
    static java.util.logging.Logger logger = java.util.logging.Logger.getLogger(
            "fr.jmmc.mf.gui.MFGui");


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField preferenceFilenaTextfield;
    private javax.swing.JButton restoreButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel saveRestorePanel;
    private javax.swing.JPanel yogaPanel;
    // End of variables declaration//GEN-END:variables

    /** Creates new form PreferencesView */
    public PreferencesView()
    {        
        initComponents();
        myPreferences.addObserver(this);
        preferenceFilenaTextfield.setText(myPreferences.getPreferenceFilename());
        update(null, null);
    }

    /**
     * DOCUMENT ME!
     *
     * @param o DOCUMENT ME!
     * @param arg DOCUMENT ME!
     */
    public void update(Observable o, Object arg)
    {
        // Adjust view and behaviour according preferences entries        
        // Keep eye on help.tooltips.show                        
        boolean b = myPreferences.getPreferenceAsBoolean("help.tooltips.show");

        if (b)
        {
            logger.fine("Adjusting ToolTipManager to on");
        }
        else
        {
            logger.fine("Adjusting ToolTipManager to off");
        }

        toolTipManager.setEnabled(b);

        File f = new File(myPreferences.getPreference("yoga.local.home") +
                myPreferences.getPreference("yoga.local.progname"));

        if (f.exists())
        {
            //  Commented since it is was not in 1.5 API if(f.canExecute()){
            jTextField2.setForeground(Color.GREEN);

            /* }else{
               JOptionPane.showMessageDialog(this, f.getName()+" has been found but is not executable, please change execution right.");
               }*/
        }
        else
        {
            jTextField2.setForeground(Color.RED);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        yogaPanel = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        preferenceFilenaTextfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        saveRestorePanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        restoreButton = new javax.swing.JButton();

        setTitle("Preferences");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        yogaPanel.setLayout(new java.awt.GridBagLayout());

        jCheckBox1.setModel(fr.jmmc.mcs.util.PreferencedButtonModel.getInstance(myPreferences, "yoga.remote.use"));
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        yogaPanel.add(jCheckBox1, gridBagConstraints);

        jLabel1.setText("HTTP URL:"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        yogaPanel.add(jLabel1, gridBagConstraints);

        jTextField1.setDocument(fr.jmmc.mcs.util.PreferencedDocument.getInstance(myPreferences,"yoga.remote.url"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        yogaPanel.add(jTextField1, gridBagConstraints);

        jLabel2.setText("Yoga local path:"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        yogaPanel.add(jLabel2, gridBagConstraints);

        jTextField2.setDocument(fr.jmmc.mcs.util.PreferencedDocument.getInstance(myPreferences,"yoga.local.home"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        yogaPanel.add(jTextField2, gridBagConstraints);

        jLabel3.setText("Use remote yoga:"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        yogaPanel.add(jLabel3, gridBagConstraints);

        jTabbedPane1.addTab("Yoga", yogaPanel);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jCheckBox2.setModel(fr.jmmc.mcs.util.PreferencedButtonModel.getInstance(myPreferences, "help.tooltips.show"));
        jCheckBox2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jCheckBox2, gridBagConstraints);

        jLabel4.setText("Preference filename: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jLabel4, gridBagConstraints);

        preferenceFilenaTextfield.setEditable(false);
        preferenceFilenaTextfield.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                preferenceFilenaTextfieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(preferenceFilenaTextfield, gridBagConstraints);

        jLabel5.setText("Show  Tooltips:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jLabel5, gridBagConstraints);

        jTabbedPane1.addTab("help", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        saveRestorePanel.setAlignmentY(0.0F);
        saveRestorePanel.setLayout(new java.awt.GridBagLayout());

        saveButton.setAction(myPreferences.savePrefAction_);
        saveRestorePanel.add(saveButton, new java.awt.GridBagConstraints());

        restoreButton.setAction(myPreferences.restorePrefAction_);
        saveRestorePanel.add(restoreButton, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(saveRestorePanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param evt DOCUMENT ME!
     */
//GEN-FIRST:event_jCheckBox2ActionPerformed
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt)
    {
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    /**
     * DOCUMENT ME!
     *
     * @param evt DOCUMENT ME!
     */
//GEN-FIRST:event_preferenceFilenaTextfieldActionPerformed
    private void preferenceFilenaTextfieldActionPerformed(java.awt.event.ActionEvent evt)
    {
 // TODO add your handling code here:
    }//GEN-LAST:event_preferenceFilenaTextfieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args)
    {
        // Set default resource for application
        fr.jmmc.mcs.util.Resources.setResourceName("fr/jmmc/mf/gui/Resources");
        Preferences.getInstance();
        java.awt.EventQueue.invokeLater(new Runnable()
            {
                public void run()
                {
                    new PreferencesView().setVisible(true);
                }
            });
    }

}
