/*
 * TargetPanel.java
 *
 * Created on 3 novembre 2006, 15:48
 */

package jmmc.mf.gui;

import jmmc.mf.models.*;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.*;
import javax.swing.event.*;
/**
 
 *
 * @author  mella
 */
public class TargetPanel extends javax.swing.JPanel implements
ListSelectionListener {

    Target current=null;
    ListModel targetFiles;
    boolean listenToFileSelection;
    ListSelectionModel selectedFiles = new DefaultListSelectionModel();
    static java.util.logging.Logger logger = java.util.logging.Logger.getLogger("jmmc.mf.gui.TargetPanel");
    
    /** Creates new form TargetPanel */
    public TargetPanel() {
        initComponents();
        fileList.addListSelectionListener(this);
        fileList.setSelectionModel(selectedFiles);
        listenToFileSelection=false;
    }
    
    public void show(Target t,Settings rootSettings){
        logger.entering(""+this.getClass(), "show");

        listenToFileSelection=false;
        current = t;                
        // Select current ident
        identComboBox.setSelectedItem(t.getIdent());  
        
        // clear file selection
        selectedFiles.clearSelection();        
        // select fileListModel corresponding to target ident
        targetFiles = (ListModel)SettingsModel.fileListModels.get(t.getIdent());        
        if(targetFiles != null){
            fileList.setModel(targetFiles);                    
            // define selected files reading fileLinks 
            Vector filesId = new Vector();                        
            File[] files =rootSettings.getFiles().getFile(); 
            for (int i=0; i < files.length; i++){
                File file  = files[i];
                filesId.addElement(file.getId());
            }
            
            FileLink[] links = current.getFileLink();
            for (int i = 0; i < links.length; i++){               
               FileLink link = links[i];
               Object idRef = link.getFileRef();
               if(idRef!=null){
                   logger.fine("Selecting file for ref="+ idRef);                 
                   selectedFiles.addSelectionInterval(i, i);  
               }
            }
            
        }else{
            // should not append except if user delete some files??
            logger.warning("Can't find list of files");            
        }               
        listenToFileSelection=true;
    }
    
     public void   valueChanged(ListSelectionEvent e){
        logger.entering(""+this.getClass(), "valueChanged");
        if(!listenToFileSelection || e.getValueIsAdjusting()){
            return;
        }
        Object[] files = fileList.getSelectedValues();
        current.removeAllFileLink();
        for (int i=0; i<files.length; i++){
            File file= (File)files[i];
            FileLink link = new FileLink();
            link.setFileRef(file);
            current.addFileLink(link);
        }
     }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        identComboBox = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        modelList = new javax.swing.JList();
        addModelButton = new javax.swing.JButton();
        modelTypeComboBox = new javax.swing.JComboBox();

        setLayout(new java.awt.BorderLayout());

        setBorder(javax.swing.BorderFactory.createTitledBorder("Target panel"));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        jLabel1.setText("Ident:");
        jPanel1.add(jLabel1);

        identComboBox.setModel(SettingsModel.oiTargets);
        identComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identComboBoxActionPerformed(evt);
            }
        });

        jPanel1.add(identComboBox);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected file list"));
        jScrollPane1.setViewportView(fileList);

        jPanel2.add(jScrollPane1);

        jPanel3.add(jPanel2);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Model list"));
        jScrollPane2.setViewportView(modelList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(jScrollPane2, gridBagConstraints);

        addModelButton.setText("Add a model");
        addModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addModelButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel4.add(addModelButton, gridBagConstraints);

        modelTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "punct", "disk" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(modelTypeComboBox, gridBagConstraints);

        jPanel3.add(jPanel4);

        add(jPanel3, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private void addModelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addModelButtonActionPerformed
    logger.entering(""+this.getClass(), "addTypeButtonActionPerformed");
    Model m = new Model();
    String type = (String)modelTypeComboBox.getSelectedItem();
    m.setName(type+current.getModelCount());
    m.setType(type);
    current.addModel(m);
    MainFrame.rootSettingsModel.fireUpdate(); 
    }//GEN-LAST:event_addModelButtonActionPerformed

    private void identComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identComboBoxActionPerformed
        if(current!=null && evt.getSource()==identComboBox){
            current.setIdent(""+identComboBox.getSelectedItem());
            System.out.println(evt);
        }
    }//GEN-LAST:event_identComboBoxActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addModelButton;
    private javax.swing.JList fileList;
    private javax.swing.JComboBox identComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList modelList;
    private javax.swing.JComboBox modelTypeComboBox;
    // End of variables declaration//GEN-END:variables
    
}
