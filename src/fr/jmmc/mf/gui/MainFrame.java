/*
 * MainFrame.java
 *
 * Created on 5 octobre 2006, 09:31
 */

package jmmc.mf.gui;
import jmmc.mcs.log.MCSLogger;

import jmmc.mf.models.*;

import jmmc.mf.svr.ServerImpl;

import java.io.*;

import java.util.*;
import java.util.logging.*;

import javax.swing.*;
import javax.swing.tree.*;

/**
 *
 * @author  mella
 */
public class MainFrame extends javax.swing.JFrame {
    
     /** Model reference */
    ModelModel userModel;
    Logger _logger = jmmc.mcs.log.MCSLogger.getLogger();
                          
    protected String lastDir = null;    
    
    /** Creates new form MainFrame */
    public MainFrame() {
        // Set default resource for application  
        jmmc.mcs.util.Resources.setResourceName("jmmc/mf/gui/Resources");
        
        initComponents();        
        
        userModel            = new ModelModel();

        // Place data Panel
        dataPanel.add(new DataPanel());

        // Place model and parameters Panel
        modelPanel.add(new ModelPanel(userModel));

        // Place engine Panel
        enginePanel.add(new EnginePanel());
        // Place engine Panel
        plotPanel.add(new PlotPanel());

        initMenuBar();
        pack();
    }
    
    /** This method is called from within the constructor to
     * initialize the form's menu bar.
     */
    public void initMenuBar()
    {
        MCSLogger.trace();

        JMenuBar jMenuBar        = new JMenuBar();
        this.setJMenuBar(jMenuBar);
        
        // Add File
        JMenu fileMenu        = new JMenu();
        fileMenu.setText("File");
        jMenuBar.add(fileMenu);
        
        // Add Edit
        JMenu editMenu        = new JMenu();           
        editMenu.setText("Edit");        
        jMenuBar.add(editMenu);
        
        // Add Edit->Preferences
        JMenu preferencesMenu = new JMenu();
        preferencesMenu.setText("Preferences");
        editMenu.add(preferencesMenu);
                        
        // Add File->LoadModel
        JMenuItem menuItem = new JMenuItem();
        Action    action   = userModel.loadModelAction;
        menuItem.setAction(action);
        fileMenu.add(menuItem);

        // Add File->SaveModel
        menuItem     = new JMenuItem();
        action       = userModel.saveModelAction;
        menuItem.setAction(action);
        fileMenu.add(menuItem);
        
        // Add Edit->Preferences->ShowPrefs
        menuItem     = new JMenuItem();
        action       = new ShowPrefAction();
        menuItem.setAction(action);
        preferencesMenu.add(menuItem);
        
        // Add Edit->Preferences->SavePrefs
        menuItem     = new JMenuItem();
        action       = new SavePrefAction();
        menuItem.setAction(action);
        preferencesMenu.add(menuItem);
        
        // Add Edit->Preferences->RestorePrefs
        menuItem     = new JMenuItem();
        action       = new RestorePrefAction();
        menuItem.setAction(action);
        preferencesMenu.add(menuItem);        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jSplitPane1 = new javax.swing.JSplitPane();
        dataPanel = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        modelPanel = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        enginePanel = new javax.swing.JPanel();
        plotPanel = new javax.swing.JPanel();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.X_AXIS));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        dataPanel.setLayout(new javax.swing.BoxLayout(dataPanel, javax.swing.BoxLayout.X_AXIS));

        jSplitPane1.setLeftComponent(dataPanel);

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        modelPanel.setLayout(new javax.swing.BoxLayout(modelPanel, javax.swing.BoxLayout.X_AXIS));

        jSplitPane2.setTopComponent(modelPanel);

        enginePanel.setLayout(new javax.swing.BoxLayout(enginePanel, javax.swing.BoxLayout.X_AXIS));

        jSplitPane3.setLeftComponent(enginePanel);

        plotPanel.setLayout(new javax.swing.BoxLayout(plotPanel, javax.swing.BoxLayout.X_AXIS));

        jSplitPane3.setRightComponent(plotPanel);

        jSplitPane2.setRightComponent(jSplitPane3);

        jSplitPane1.setRightComponent(jSplitPane2);

        getContentPane().add(jSplitPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
        
    protected class ShowPrefAction extends MFAction
    {
        public ShowPrefAction(){
            super("showPreferences");
        }
        
        public void actionPerformed(java.awt.event.ActionEvent e)
        {
            try
            {
                Preferences.getInstance().saveToFile();
            }
            catch (Exception exc)
            {
                // @todo handle this error at user level
                exc.printStackTrace();
            }
        }
    }

    
     protected class SavePrefAction extends MFAction
    {
        public SavePrefAction(){
            super("savePreferences");
        }
        
        public void actionPerformed(java.awt.event.ActionEvent e)
        {
            try
            {
                Preferences.getInstance().saveToFile();
            }
            catch (Exception exc)
            {
                // @todo handle this error at user level
                exc.printStackTrace();
            }
        }
    }    

    protected class RestorePrefAction extends MFAction
    {
        public RestorePrefAction(){
            super("restorePreferences");
        }
        
        public void actionPerformed(java.awt.event.ActionEvent e)
        {
            try
            {
                Preferences.getInstance().resetToDefaultPreferences();
            }
            catch (Exception exc)
            {
                // @todo handle this error at user level
                exc.printStackTrace();
            }
        }
    }        
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel enginePanel;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JPanel modelPanel;
    private javax.swing.JPanel plotPanel;
    // End of variables declaration//GEN-END:variables
    
}
