/*
 JMMC
*/
package jmmc.mf.gui;

import jmmc.mcs.log.MCSLogger;

/*
 * MainFrame.java
 *
 * Created on 13 juillet 2006, 12:57
 */
import jmmc.mf.models.*;

import jmmc.mf.svr.ServerImpl;

import java.io.*;

import java.util.*;
import java.util.logging.*;

import javax.swing.*;
import javax.swing.tree.*;


/**
 *
 * @author  mella
 */
public class MainFrame extends javax.swing.JFrame
{
    /** Model reference */
    ModelModel userModel;
    Logger _logger = jmmc.mcs.log.MCSLogger.getLogger();
                          
    protected String lastDir = null;

   

    /** Creates new form MainFrame */
    public MainFrame()
    {
        // Set default resource    
        jmmc.mcs.util.Resources.setResourceName("jmmc/mf/gui/Resources");

        initComponents();

        userModel            = new ModelModel();

        // Place data Panel
        dataPanel.add(new DataPanel());

        // Place model and parameters Panel
        modelPanel.add(new ModelPanel(userModel));

        // Place engine Panel
        enginePanel.add(new EnginePanel());
        // Place engine Panel
        plotPanel.add(new PlotPanel());

        initMenuBar();
        pack();
    }

    /** This method is called from within the constructor to
     * initialize the form's menu bar.
     */
    public void initMenuBar()
    {
        MCSLogger.trace();

        // Add File->LoadModel
        JMenuItem menuItem = new JMenuItem();
        Action    action   = userModel.loadModelAction;
        menuItem.setAction(action);
        fileMenu.add(menuItem);

        // Add File->SaveModel
        menuItem     = new JMenuItem();
        action       = userModel.saveModelAction;
        menuItem.setAction(action);
        fileMenu.add(menuItem);
    }

    
    
    protected class SavePrefAction extends AbstractAction
    {
        public void actionPerformed(java.awt.event.ActionEvent e)
        {
            try
            {
                Preferences.getInstance().saveToFile();
            }
            catch (Exception exc)
            {
                // @todo handle this error at user level
                exc.printStackTrace();
            }
        }
    }

    protected class RestorePrefAction extends AbstractAction
    {
        public void actionPerformed(java.awt.event.ActionEvent e)
        {
            try
            {
                Preferences.getInstance().resetToDefaultPreferences();
            }
            catch (Exception exc)
            {
                // @todo handle this error at user level
                exc.printStackTrace();
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
    private void initComponents()
    {
        jSplitPane1     = new javax.swing.JSplitPane();
        dataPanel       = new javax.swing.JPanel();
        jSplitPane2     = new javax.swing.JSplitPane();
        modelPanel      = new javax.swing.JPanel();
        jSplitPane3     = new javax.swing.JSplitPane();
        enginePanel     = new javax.swing.JPanel();
        plotPanel       = new javax.swing.JPanel();
        jMenuBar        = new javax.swing.JMenuBar();
        fileMenu        = new javax.swing.JMenu();
        editMenu        = new javax.swing.JMenu();
        jMenu1          = new javax.swing.JMenu();
        jMenuItem1      = new javax.swing.JMenuItem();
        jMenuItem2      = new javax.swing.JMenuItem();

        getContentPane()
            .setLayout(new javax.swing.BoxLayout(getContentPane(),
                javax.swing.BoxLayout.X_AXIS));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setAutoscrolls(true);
        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setOneTouchExpandable(true);
        dataPanel.setLayout(new javax.swing.BoxLayout(dataPanel,
                javax.swing.BoxLayout.X_AXIS));

        dataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
                "Data panel"));
        jSplitPane1.setTopComponent(dataPanel);

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setAutoscrolls(true);
        jSplitPane2.setContinuousLayout(true);
        jSplitPane2.setOneTouchExpandable(true);
        modelPanel.setLayout(new javax.swing.BoxLayout(modelPanel,
                javax.swing.BoxLayout.X_AXIS));

        modelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
                "Model panel"));
        jSplitPane2.setLeftComponent(modelPanel);

        jSplitPane3.setAutoscrolls(true);
        jSplitPane3.setContinuousLayout(true);
        jSplitPane3.setOneTouchExpandable(true);
        enginePanel.setLayout(new javax.swing.BoxLayout(enginePanel,
                javax.swing.BoxLayout.X_AXIS));

        enginePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
                "Engine panel"));
        jSplitPane3.setLeftComponent(enginePanel);

        plotPanel.setLayout(new javax.swing.BoxLayout(plotPanel,
                javax.swing.BoxLayout.X_AXIS));

        plotPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
                "Plot panel"));
        jSplitPane3.setRightComponent(plotPanel);

        jSplitPane2.setBottomComponent(jSplitPane3);

        jSplitPane1.setBottomComponent(jSplitPane2);

        getContentPane().add(jSplitPane1);

        fileMenu.setText("File");
        jMenuBar.add(fileMenu);

        editMenu.setText("Edit");
        jMenu1.setLabel("Preferences");
        jMenuItem1.setAction(new SavePrefAction());
        jMenuItem1.setToolTipText(java.util.ResourceBundle.getBundle(
                "jmmc/mf/gui/Resources")
                                                          .getString("menu.savePreferences.description"));
        jMenuItem1.setLabel(java.util.ResourceBundle.getBundle(
                "jmmc/mf/gui/Resources").getString("menu.savePreferences.text"));
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAction(new RestorePrefAction());
        jMenuItem2.setToolTipText(java.util.ResourceBundle.getBundle(
                "jmmc/mf/gui/Resources")
                                                          .getString("menu.restorePreferences.description"));
        jMenuItem2.setLabel(java.util.ResourceBundle.getBundle(
                "jmmc/mf/gui/Resources")
                                                    .getString("menu.restorePreferences.text"));
        jMenu1.add(jMenuItem2);

        editMenu.add(jMenu1);

        jMenuBar.add(editMenu);

        setJMenuBar(jMenuBar);

        pack();
    }
// </editor-fold>  
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify
    private javax.swing.JPanel     dataPanel;
    private javax.swing.JMenu      editMenu;
    private javax.swing.JPanel     enginePanel;
    private javax.swing.JMenu      fileMenu;
    private javax.swing.JMenu      jMenu1;
    private javax.swing.JMenuBar   jMenuBar;
    private javax.swing.JMenuItem  jMenuItem1;
    private javax.swing.JMenuItem  jMenuItem2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JPanel     modelPanel;
    private javax.swing.JPanel     plotPanel;
    // End of variables declaration
    
}